{"version":3,"sources":["webpack:///../components/CustomTable/CustomTable.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","CustomTable","__position","__code","__scope","Playground","Props","host","data","columns","id","label","width","render","tableType","editing","showCopyAlert","regenerateCode","isMDXComponent"],"mappings":"+QAWaA,G,oBAAe,S,wNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,eADR,eAGA,4BAAW,0BAAYC,WAAW,KAAvB,eAAX,mDAAsH,0BAAYA,WAAW,KAAvB,aAAtH,6ZAIA,YAAC,IAAD,CAAOC,GAAIC,IAAaH,QAAQ,UAChC,gEACA,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,ydAA4eC,SAAO,GACphBP,QACAH,kBACAW,eACAC,UACAL,iBALohB,gBAMphBP,IANohB,EAOphBH,eAPohB,GAQnhBO,QAAQ,cACb,YAAC,IAAD,CAAaS,KAAK,cAAcC,KAAM,KAAMC,QAAS,CAAC,CAChDC,GAAI,aACJC,MAAO,kBACPC,MAAO,OACPC,OAAQ,kBAAM,OACb,CACDH,GAAI,MACJC,MAAO,WACPC,MAAO,OACPC,OAAQ,kBAAM,OACb,CACDH,GAAI,UACJC,MAAO,UACPC,MAAO,SACLE,UAAU,cAAcC,QAAS,KAAMC,cAAe,kBAAM,MAAMC,eAAgB,kBAAM,MAAMnB,QAAQ,uB,sNAMhHH,EAAWuB,gBAAiB","file":"component---components-custom-table-custom-table-mdx-6ca9c9bf0b1ccc6cf93f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/COMP0016_2020_21_Team20/COMP0016_2020_21_Team20/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport CustomTable from './CustomTable';\nimport 'rsuite/dist/styles/rsuite-default.min.css';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"customtable\"\n    }}>{`CustomTable`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`CustomTable`}</inlineCode>{` component displays a table, which depending on `}<inlineCode parentName=\"p\">{`tableType`}</inlineCode>{` is slightly different. The urls table type allows only the urls of the\nquestions to be changed. The questions table type allows the urls and question body to be changed and also allows questions to be deleted and\nadded. Laslty, the departments table type allows the Hospital user type to add and delete departments and also copy/regenerate each join URL.\n(if no data the table only shows the column names)`}</p>\n    <Props of={CustomTable} mdxType=\"Props\" />\n    <p>{`It is normally used in the manage page.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<CustomTable\\n  host=\\\"example.com\\\"\\n  data={null}\\n  columns={[\\n    {\\n      id: \\'department\\',\\n      label: \\'Department Name\\',\\n      width: \\'auto\\',\\n      render: () => null,\\n    },\\n    {\\n      id: \\'url\\',\\n      label: \\'Join URL\\',\\n      width: \\'auto\\',\\n      render: () => null,\\n    },\\n    { id: \\'actions\\', label: \\'Actions\\', width: \\'auto\\' },\\n  ]}\\n  tableType=\\\"departments\\\"\\n  editing={null}\\n  showCopyAlert={() => null}\\n  regenerateCode={() => null}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CustomTable,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CustomTable host=\"example.com\" data={null} columns={[{\n        id: 'department',\n        label: 'Department Name',\n        width: 'auto',\n        render: () => null\n      }, {\n        id: 'url',\n        label: 'Join URL',\n        width: 'auto',\n        render: () => null\n      }, {\n        id: 'actions',\n        label: 'Actions',\n        width: 'auto'\n      }]} tableType=\"departments\" editing={null} showCopyAlert={() => null} regenerateCode={() => null} mdxType=\"CustomTable\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}